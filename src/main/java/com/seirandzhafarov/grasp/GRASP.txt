GRASP представляет собой набор шаблонов проектирования, которые помогают определить распределение
    обязанностей между объектами и классами в системе. Основная цель GRASP сделать систему более
    понятной, гибкой, и легко расширяемой.

Принципы GRASP:

1. Information Expert (Информационный эксперт) - Этот принцип гласит что ответственность за
    выполнение задачи должна быть назначена объекту, который обладает необходимой информацией
    для ее выполнения. Это минимизирует количество зависимостей между объектами и способствует
    упрощению всей системы в целом.

2. Creator (Создатель) - объект A должен быть ответственнен за создание объекта B если A:
    - Использует B;
    - Хранит или агрегирует B;
    - Инициализирует B;
    - Логически содержит B;

3. Controller - объект который отвечает за обработку событий, поступающих от пользователя.

4. Low coupling (низкая связанность) - т.н объекты почти ничего не знают друг о друге,
    изменения в одном объекте минимально влияют на другой объект.

5. High Cohesion (высокое зацепление) - т.е на объект возложены минимальные объязанности которые
    логически связаны друг с другом.

6. Polymorphism (Полиморфизм) - использование полиморфизма для выполнение различных действий
    в зависимости от типа объекта.

7. Pure Fabrication (Чистая фабрикация) - Внедрение в программу доп класса (не отражающего
    реальной сущности из предметной области) и наделение его необходимым функционалом.
    Это позволяет дизайну системы соответствовать принципам низкой связанности и высокого
    зацепления.