GOF - патерн проектирования который больше отвечает за дизайн системы.
    у GOF есть три группы, поведенческие патерны, порождающие патерны и структурные патерны.

ПОРОЖДАЮЩИЕ:
 - Фабричный метод - это порождающий паттерн проектирования, который определяет общий интерфейс
                     для создания объектов в суперклассе, позволяя подклассам изменять тип
                     создаваемых объектов.
- Абстрактная фабрика -это порождающий паттерн проектирования, который позволяет создавать
                       семейства связанных объектов, не привязываясь к конкретным классам
                       создаваемых объектов.
- Одиночка (Singleton) - это порождающий паттерн проектирования, который гарантирует, что у
                         класса есть только один экземпляр, и предоставляет к нему глобальную
                         точку доступа.
- Строитель - это порождающий паттерн проектирования, который позволяет создавать сложные объекты
              пошагово.
- Прототип — это порождающий паттерн проектирования, который позволяет копировать объекты,
             не вдаваясь в подробности их реализации.

СТРУКТУРНЫЕ:
- Адаптер - позволяет объектам с несовместимыми интерфейсами работать вместе.

- Мост - разделяет один или несколько классов на две отдельные иерархии — абстракцию и реализацию,
  позволяя изменять их независимо друг от друга.

- Декоратор - позволяет добавлять объектам новое поведение на лету, помещая их в объекты обертки.

- Фасад - предоставляет простой интерфейс к сложной библиотеке классов, библиотеке или фреймворку.

- Заместитель (Proxy) - объект который выступает прослойкой между клиентом и реальным сервимным
                        объектом. Например клиент обращается к какому то сервису за данными,
                        данные в этом сервисе меняются только раз в день.
                        Мы делаем прослойку между клиентом и сервисом в которой кешируем ответ
                        сервиса, при повторном обращении клиента мы выдаем закешированное значение.

ПОВЕДЕНЧЕСКИЕ:

- Цепочка обязанностей - позваляет передавать запросы последовательно по цепочке обработчиков.
    Каждый последующий обработчик решает может ли он обработать запрос сам или стоит его
    передать дальше по цепи.

- Шаблонный метод - задает структуру алгоритма и позволяет подклассам переопределить некоторые
    его шаги, не изменяя структуру с целом.

- Наблюдатель - позволяет объектам оповещать другие объекты об изменении своего состояния.